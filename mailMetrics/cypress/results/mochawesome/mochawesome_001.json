{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-19T13:38:38.771Z",
    "end": "2023-01-19T13:38:46.188Z",
    "duration": 7417,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "578e60c7-fbe0-4fc4-83be-fa28ce3dca3b",
      "title": "",
      "fullFile": "cypress\\e2e\\mailMetrics\\herokuappTest.cy.js",
      "file": "cypress\\e2e\\mailMetrics\\herokuappTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1501d0c5-b0ec-442e-876b-8d5050c566fc",
          "title": "visual regresion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "visual regresion - test herokuApp",
              "fullTitle": "visual regresion visual regresion - test herokuApp",
              "timedOut": null,
              "duration": 3185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//6. Then go to http://the-internet.herokuapp.com/dynamic_content?with_content=static, click \n//on “click here”, wait until content is refreshed and count number of characters in the last \n//section which gets refreshed\ncy.visit(Cypress.env(\"herokuApp\"));\ncy.document().then(image => {\n  cy.wrap(image).toMatchSnapshot().as(\"zd1\").then(() => {\n    cy.xpath(\"//p//a\").click().then(() => {\n      cy.document().then(imageAfterRefresh => {\n        cy.wrap(imageAfterRefresh).toMatchSnapshot().as(\"zd2\");\n      });\n    });\n  });\n});\ncy.get(\"@zd1\").should(\"not.equal\", \"@zd2\").then(() => {\n  cy.log(\"Test pass\");\n});\ncy.xpath('//*[@class=\"large-10 columns\"]').eq(2).invoke(\"text\").then(getText => {\n  cy.log(\"The length of a string: \" + getText.length);\n});",
              "err": {},
              "uuid": "95da0d35-b754-4bb1-9b9b-25b082c77023",
              "parentUUID": "1501d0c5-b0ec-442e-876b-8d5050c566fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95da0d35-b754-4bb1-9b9b-25b082c77023"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}