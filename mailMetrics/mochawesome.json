{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-19T13:38:19.756Z",
    "end": "2023-01-19T13:38:46.188Z",
    "duration": 14117,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "578e60c7-fbe0-4fc4-83be-fa28ce3dca3b",
      "title": "",
      "fullFile": "cypress\\e2e\\mailMetrics\\herokuappTest.cy.js",
      "file": "cypress\\e2e\\mailMetrics\\herokuappTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1501d0c5-b0ec-442e-876b-8d5050c566fc",
          "title": "visual regresion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "visual regresion - test herokuApp",
              "fullTitle": "visual regresion visual regresion - test herokuApp",
              "timedOut": null,
              "duration": 3185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//6. Then go to http://the-internet.herokuapp.com/dynamic_content?with_content=static, click \n//on “click here”, wait until content is refreshed and count number of characters in the last \n//section which gets refreshed\ncy.visit(Cypress.env(\"herokuApp\"));\ncy.document().then(image => {\n  cy.wrap(image).toMatchSnapshot().as(\"zd1\").then(() => {\n    cy.xpath(\"//p//a\").click().then(() => {\n      cy.document().then(imageAfterRefresh => {\n        cy.wrap(imageAfterRefresh).toMatchSnapshot().as(\"zd2\");\n      });\n    });\n  });\n});\ncy.get(\"@zd1\").should(\"not.equal\", \"@zd2\").then(() => {\n  cy.log(\"Test pass\");\n});\ncy.xpath('//*[@class=\"large-10 columns\"]').eq(2).invoke(\"text\").then(getText => {\n  cy.log(\"The length of a string: \" + getText.length);\n});",
              "err": {},
              "uuid": "95da0d35-b754-4bb1-9b9b-25b082c77023",
              "parentUUID": "1501d0c5-b0ec-442e-876b-8d5050c566fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95da0d35-b754-4bb1-9b9b-25b082c77023"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4d7af537-ff33-4825-a602-7588108bd17b",
      "title": "",
      "fullFile": "cypress\\e2e\\mailMetrics\\carbonTest.cy.js",
      "file": "cypress\\e2e\\mailMetrics\\carbonTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d417b33a-749c-4a3a-bba7-b3a5189e2d67",
          "title": "Carbon footprint calculator",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Carbon footprint calculator - test",
              "fullTitle": "Carbon footprint calculator Carbon footprint calculator - test",
              "timedOut": null,
              "duration": 10932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//1. Go to website mailmetrics.com\ncy.visit(Cypress.env(\"mailMetricsUrl\")); //2. Verify that on the main page there is “Carbon footprint calculator”\n_HomePage.default.checkCarboCalcIsVisible(\"Carbon footprint calculator\"); //3. Go to “Find out more”\n\n_HomePage.default.checkFindOutMoreBtn(\"Find out more\").click(); //4. Fill in the calculator with the following data\n\n_CarbonCalcPage.default.checkCalculatorFooterIsVisible();\n_CarbonCalcPage.default.checkLettersAmountIsVisible();\n_CarbonCalcPage.default.setLetterAmount(\"1000\"); //Verify that on the clac page there are all of the elements and fill the form\n\n_CarbonCalcPage.default.checkPagesAmountIsVisible();\n_CarbonCalcPage.default.setPagesAmount(\"2\");\n_CarbonCalcPage.default.checkEmailsAmountIsVisible();\n_CarbonCalcPage.default.setEmailsAmount(\"35000\");\n_CarbonCalcPage.default.checkEmailsRangeIsVisible();\n_CarbonCalcPage.default.setEmailsRange(70);\n_CarbonCalcPage.default.checkRangeIsChange(70); //Verify emission after Reduction\n\n_CarbonCalcPage.default.checkEmissionAfterReduction().invoke(\"text\").then(emissionAfterReduction => {\n  let doubleEmissionAfterReduction = parseFloat(emissionAfterReduction) * 2;\n  cy.log(\"Double value is: \" + doubleEmissionAfterReduction); //5. Send the double value of the result achieved in the calculator through an email to andrzej.pieta@mailmetrics.com\n  const serverID = \"jmybfqol\";\n  const sendEmailAdress = \"michalmadejski00@gmail.com\";\n  const subject = \"Email from Michal Madejski - automation test\";\n  const text = `The double value of the result achieved in the calculator is ${doubleEmissionAfterReduction}`;\n  _EmailSender.default.sendEmail(serverID, sendEmailAdress, subject, text).then(result => {\n    expect(result.text.body).to.equal(`The double value of the result achieved in the calculator is ${doubleEmissionAfterReduction}`);\n  });\n});",
              "err": {},
              "uuid": "3ae07483-8e1b-4449-9b96-66dc1bae01b3",
              "parentUUID": "d417b33a-749c-4a3a-bba7-b3a5189e2d67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ae07483-8e1b-4449-9b96-66dc1bae01b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10932,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}